#!/usr/bin/env python3
# HTML Report Generator for Phase 1 Results

import asyncio
import sys
import os
import json
from datetime import datetime
from pathlib import Path

sys.path.insert(0, 'cli')

from smart_sitecore.phase1_extractor import run_phase1_extraction


async def generate_html_report():
    print("SMART SITECORE ANALYSIS PLATFORM")
    print("Phase 1: Sitecore Data Extraction Report")
    print("=" * 50)

    # Known working Sitecore endpoint
    sitecore_url = "https://cm-qa-sc103.kajoo.ca"
    api_key = "{34B8FFF8-8F50-4C41-95A8-D2A9304EBD52}"

    try:
        # Run Phase 1 extraction
        print("Running Phase 1 extraction...")
        scan_id = await run_phase1_extraction(sitecore_url, api_key)

        print(f"Extraction completed. Scan ID: {scan_id}")

        # Load results from Supabase database
        from smart_sitecore.supabase_db_client import supabase_db_client
        results = await supabase_db_client.get_scan_results(scan_id)

        # Generate simple HTML
        html_content = generate_simple_html(scan_id, results, sitecore_url)

        # Save HTML report
        report_path = Path("phase1_report.html")
        with open(report_path, 'w', encoding='utf-8') as f:
            f.write(html_content)

        print(f"\nHTML report generated: {report_path}")
        print(f"Open in browser to view results")

        return True

    except Exception as e:
        print(f"Error generating report: {e}")
        import traceback
        traceback.print_exc()
        return False


def generate_simple_html(scan_id, results, sitecore_url):
    total_modules = len(results)
    successful_modules = len([r for r in results if r['error'] is None])

    html = f'''<!DOCTYPE html>
<html>
<head>
    <title>Smart Sitecore Analysis Report - Phase 1</title>
    <style>
        body {{ font-family: Arial, sans-serif; margin: 20px; }}
        .header {{ background: #007acc; color: white; padding: 20px; text-align: center; }}
        .summary {{ background: #f8f9fa; padding: 15px; margin: 20px 0; }}
        .module {{ border: 1px solid #ddd; margin: 10px 0; padding: 15px; }}
        .success {{ border-left: 4px solid #28a745; }}
        .error {{ border-left: 4px solid #dc3545; }}
    </style>
</head>
<body>
    <div class="header">
        <h1>Smart Sitecore Analysis Platform</h1>
        <p>Phase 1: Sitecore Data Extraction Report</p>
        <p>Target: {sitecore_url}</p>
        <p>Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}</p>
        <p>Scan ID: {scan_id}</p>
    </div>

    <div class="summary">
        <h2>Summary</h2>
        <p>Modules Executed: {successful_modules}/{total_modules}</p>
    </div>

    <div class="results">
        <h2>Analysis Results</h2>'''

    for result in results:
        status_class = "success" if not result['error'] else "error"
        html += f'''
        <div class="module {status_class}">
            <h3>{result['module'].replace('-', ' ').title()}</h3>
            <p>Confidence: {result['confidence']:.2f} | Duration: {result['duration_ms']}ms</p>'''

        if result['error']:
            html += f'<p style="color: #dc3545;">Error: {result["error"]}</p>'
        else:
            html += '<p style="color: #28a745;">Status: SUCCESS</p>'

        html += '</div>'

    html += '''
    </div>
    <footer style="text-align: center; margin-top: 30px; color: #666;">
        <p>Generated by Smart Sitecore Analysis Platform - Phase 1</p>
        <p>Ready for Phase 2: Analysis Modules</p>
    </footer>
</body>
</html>'''

    return html


if __name__ == "__main__":
    success = asyncio.run(generate_html_report())
    sys.exit(0 if success else 1)
